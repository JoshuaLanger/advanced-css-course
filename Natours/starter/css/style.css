/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Universal selector for reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* 
  Box-sizing was hard-coded to "border-box" here, but since moved to 'body' 
  This makes it easier for later changes and 3rd party stylesheets to modify it
  Since box-sizing is not inheritable by default, we manually call it here
  */
  box-sizing: inherit;
}

/* Setting REM here */
html {
  /* 
  A hard coded value prevents the browser from filling its own root value
  By using an initial percentage, the browser (and thus the user) can easily set their own font size value
  62.5% is derived from dividing 10px (what we want) by 16px (the default value)
  */
  font-size: 62.5%;
}

/* All font properties inherited from body */
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url('../img/hero.jpg');
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

/* Logo container for postioning */
.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.logo {
  height: 3.5rem;
}

/* Text container for positioning */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #eef;
  text-transform: uppercase;
  backface-visibility: hidden; /* This prevents heading from shifting after animation */
  margin-bottom: 6rem;
}

.heading-primary-main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation: moveInLeft 0.7s ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  animation: moveInRight 0.7s ease-out;
}

/* Both link and visited pseudo-classes will have the same style */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:hover::after {
  transform: scale(1.6);
  opacity: 0;
}

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  z-index: -1;
  position: absolute;
  top: 0;
  left: 0;
  transition: all 0.4s;
}

.btn-white {
  background-color: #eef;
  color: #777;
}

.btn-white::after {
  background-color: #eef;
}

.btn-animated {
  animation: moveUp 0.5s cubic-bezier(0.17, 0.67, 0.51, 1.46) 0.75s backwards;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  100% {
    opacity: 100;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  100% {
    opacity: 100;
    transform: translateX(0);
  }
}

@keyframes moveUp {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 100;
    transform: translateY(0);
  }
}
