/* Setting REM here */
html {
  /* 
  A hard coded value prevents the browser from filling its own root value
  By using an initial percentage, the browser (and thus the user) can easily set their own font size value
  62.5% is derived from dividing 10px (what we want) by 16px (the default value)
  */
  font-size: 62.5%;

  // the four breakpoint values are sm, md, lg, and xl

  @include respond(xl) {
    font-size: 80%;
  }
  @include respond(lg) {
    font-size: 70%;
  }
  @include respond(md) {
    font-size: 60%;
  }
  @include respond(sm) {
    font-size: 50%;
  }
}

/* All font properties inherited from body */
body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: $font-size-default;
  line-height: 1.7;
  color: $color-grey-dark;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden; /* This prevents heading from shifting after animation */
  margin-bottom: 6rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 0.7s ease-out;

    @include respond(sm) {
      font-size: 5rem;
      letter-spacing: 1rem;
    }
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation: moveInRight 0.7s ease-out;

    @include respond(sm) {
      font-size: 1.5rem;
      letter-spacing: 0.8rem;
    }
  }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  @include text-gradient;
  letter-spacing: 0.2rem;
  transition: all 0.2s;
  &:hover {
    transform: skewY(5deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba($color-black, 0.2);
  }

  @include respond(md) {
    font-size: 3rem;
  }

  @include respond(md) {
    font-size: 2.5rem;
  }
}
.heading-tertiary {
  font-size: $font-size-default;
  font-weight: 700;
  text-transform: uppercase;
}
.paragraph {
  font-size: $font-size-default;
  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}
